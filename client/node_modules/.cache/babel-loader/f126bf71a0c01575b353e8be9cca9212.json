{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kentauchi/Documents/WMDD/Spring2021/SpecialTopicII/React/final2/client/src/components/listItems/Person.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, List } from \"antd\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport UpdatePerson from \"../forms/UpdatePerson\";\nimport RemovePerson from \"../buttons/RemovePerson\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_PEOPLE, GET_BOAT, ADD_BOAT } from \"../../queries\";\n\nconst getStyles = () => ({\n  card: {\n    width: \"500px\"\n  }\n});\n\nconst Person = props => {\n  _s();\n\n  const [id] = useState(props.id);\n  const [firstName, setFirstName] = useState(props.firstName);\n  const [lastName, setLastName] = useState(props.lastName);\n  const [editMode, setEditMode] = useState(false);\n  const [boat, setBoat] = useState(\"\");\n  const styles = getStyles();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BOATS);\n  console.log(\"boat\", data);\n\n  const fullName = () => {\n    return `${props.firstName} ${props.lastName}`;\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case \"firstName\":\n        setFirstName(value);\n        break;\n\n      case \"lastName\":\n        setLastName(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleButtonClick = () => setEditMode(!editMode);\n\n  if (loading) return \"Loading...\";\n  if (error) return `Errror! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(List.Item, {\n    children: editMode ? /*#__PURE__*/_jsxDEV(UpdatePerson, {\n      id: id,\n      firstName: firstName,\n      lastName: lastName,\n      onButtonClick: handleButtonClick,\n      updateStateVariable: updateStateVariable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      title: fullName(),\n      actions: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/details\",\n        children: \"LEARN MORE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditOutlined, {\n        onClick: handleButtonClick\n      }, \"edit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RemovePerson, {\n        id: id,\n        firstName: firstName,\n        lastName: lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)],\n      style: styles.card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, props.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Person, \"kn4JrnmP1fbLro7sAZrhLcIVT1o=\", false, function () {\n  return [useQuery];\n});\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["/Users/kentauchi/Documents/WMDD/Spring2021/SpecialTopicII/React/final2/client/src/components/listItems/Person.js"],"names":["React","useState","useEffect","Card","List","Link","Route","Switch","EditOutlined","UpdatePerson","RemovePerson","useMutation","useQuery","GET_PEOPLE","GET_BOAT","ADD_BOAT","getStyles","card","width","Person","props","id","firstName","setFirstName","lastName","setLastName","editMode","setEditMode","boat","setBoat","styles","loading","error","data","GET_BOATS","console","log","fullName","updateStateVariable","variable","value","handleButtonClick","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, List } from \"antd\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport UpdatePerson from \"../forms/UpdatePerson\";\nimport RemovePerson from \"../buttons/RemovePerson\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_PEOPLE, GET_BOAT, ADD_BOAT } from \"../../queries\";\n\nconst getStyles = () => ({\n  card: {\n    width: \"500px\",\n  },\n});\n\nconst Person = (props) => {\n  const [id] = useState(props.id);\n  const [firstName, setFirstName] = useState(props.firstName);\n  const [lastName, setLastName] = useState(props.lastName);\n  const [editMode, setEditMode] = useState(false);\n  const [boat, setBoat] = useState(\"\");\n  const styles = getStyles();\n\n  const { loading, error, data } = useQuery(GET_BOATS);\n  console.log(\"boat\", data);\n\n  const fullName = () => {\n    return `${props.firstName} ${props.lastName}`;\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case \"firstName\":\n        setFirstName(value);\n        break;\n      case \"lastName\":\n        setLastName(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleButtonClick = () => setEditMode(!editMode);\n\n  if (loading) return \"Loading...\";\n  if (error) return `Errror! ${error.message}`;\n\n  return (\n    <List.Item key={props.id}>\n      {editMode ? (\n        <UpdatePerson\n          id={id}\n          firstName={firstName}\n          lastName={lastName}\n          onButtonClick={handleButtonClick}\n          updateStateVariable={updateStateVariable}\n        />\n      ) : (\n        <Card\n          title={fullName()}\n          actions={[\n            <Link to=\"/details\">LEARN MORE </Link>,\n            <EditOutlined key=\"edit\" onClick={handleButtonClick} />,\n            <RemovePerson id={id} firstName={firstName} lastName={lastName} />,\n          ]}\n          style={styles.card}\n        ></Card>\n      )}\n    </List.Item>\n  );\n};\n\nexport default Person;\n"]},"metadata":{},"sourceType":"module"}